#!/usr/bin/env python

import numpy as np
import argparse
from limbdark import get_ld_df


parser = argparse.ArgumentParser(description="retrieve limb-darkening coefficients for Kepler")
parser.add_argument('--teff', help='effective temperature of the star (Teff) [Kelvin]: mu,sigma', type=str)
parser.add_argument('--logg', help='surface gravity of the star (logg) [dex]: mu,sigma', type=str, default=None)
parser.add_argument('--feh', help='metallicity of the star (feh) [dex]: mu,sigma', type=str, default=None)
parser.add_argument('--band', help='the bandpass name: either kep or spz', type=str, default='kep')

args = parser.parse_args()

teff,uteff = map(float, args.teff.split(','))
logg,ulogg = map(float, args.logg.split(','))
if args.feh is not None:
    feh,ufeh = map(float, args.feh.split(','))
else:
    feh,ufeh = None, None

if args.band == 'kep':
    df = get_ld_df('Kp', teff, uteff, logg, ulogg, feh, ufeh)
elif args.band == 'spz':
    df = get_ld_df('S2', teff, uteff, logg, ulogg, feh, ufeh)

print("number of models: {}".format(df.shape[0]))
print("\tmin\tmean\tmax")
print("temp:\t{0:.2f}\t{1:.2f}\t{2:.2f}".format(df.teff.min(), df.teff.mean(), df.teff.max()))
print("logg:\t{0:.2f}\t{1:.2f}\t{2:.2f}".format(df.logg.min(), df.logg.mean(), df.logg.max()))
print("feh:\t{0:.2f}\t{1:.2f}\t{2:.2f}".format(df.feh.min(), df.feh.mean(), df.feh.max()))
print("-" * 10 + " limb-darkening coefficients " + "-" * 10)
print("mean:   {0:.6f}, {1:.6f}".format(df.u1.mean(), df.u2.mean()))
print("median: {0:.6f}, {1:.6f}".format(np.median(df.u1), np.median(df.u2)))
print("std:    {0:.6f}, {1:.6f}".format(np.std(df.u1), np.std(df.u2)))
